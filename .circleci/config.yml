# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.4.1-node-browsers
        environment:
          COVERAGE: true

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "lois.gemspec" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - vendor/bundle
          key: v2-dependencies-{{ checksum "lois.gemspec" }}

      # run tests!
      - run:
          name: i18n-tasks
          command: |
            lois i18n-tasks -g $GITHUB_CREDENTIALS -c circleci

      - run:
          name: install
          command: |
            bin/rake install

      - run:
          name: Bundler-Audit
          command: |
            lois bundler_audit -g $GITHUB_CREDENTIALS -c circleci

      - run:
          name: Rubocop
          command: |
            lois rubocop -g $GITHUB_CREDENTIALS -c circleci

      - run:
          name: Reek
          command: |
            lois reek -g $GITHUB_CREDENTIALS -c circleci

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir results
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out results/rspec.xml \
                            --format progress \

      # collect reports
      - store_test_results:
          path: results
      - store_artifacts:
          path: results
          destination: results
      - store_artifacts:
          path: lois
          destination: lois
